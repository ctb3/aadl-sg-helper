name: Deploy Backend to Elastic Beanstalk

on:
  push:
    branches: [ main ]
    paths: [ 'backend/**' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: Create deployment package
      run: |
        cd backend
        zip -r ../aadl-sg-backend.zip . -x "node_modules/*" ".git/*" "*.log"
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        
    - name: Create Elastic Beanstalk environment if not exists
      run: |
        # Check if environment exists
        if ! aws elasticbeanstalk describe-environments \
          --application-name aadl-sg-backend \
          --environment-names aadl-sg-backend-prod-new \
          --region us-east-2 \
          --query 'Environments[0].Status' \
          --output text 2>/dev/null | grep -q "Ready\|Launching\|Updating"; then
          
          echo "Creating new environment..."
          aws elasticbeanstalk create-environment \
            --application-name aadl-sg-backend \
            --environment-name aadl-sg-backend-prod-new \
            --solution-stack-name "64bit Amazon Linux 2023 v6.6.1 running Node.js 20" \
            --region us-east-2
          
          echo "Waiting for environment to be ready..."
          aws elasticbeanstalk wait environment-exists \
            --environment-names aadl-sg-backend-prod-new \
            --region us-east-2
        else
          echo "Environment already exists"
        fi
        
    - name: Deploy to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: aadl-sg-backend
        environment_name: aadl-sg-backend-prod-new
        region: us-east-2
        version_label: "v${{ github.run_number }}"
        deployment_package: aadl-sg-backend.zip
        wait_for_deployment: true
        wait_for_environment_recovery: true 